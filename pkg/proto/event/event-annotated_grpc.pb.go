// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package event

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// CloudEndpointsEventAPIExampleServiceClient is the client API for CloudEndpointsEventAPIExampleService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CloudEndpointsEventAPIExampleServiceClient interface {
	// Event API
	//
	// Event API
	GetServiceNameEventEventTypeEventId(ctx context.Context, in *GetServiceNameEventEventTypeEventIdRequest, opts ...grpc.CallOption) (*Event, error)
	// Event API
	//
	// Event API for Saving Events
	PostServiceNameEventEventType(ctx context.Context, in *PostServiceNameEventEventTypeRequest, opts ...grpc.CallOption) (*EventSuccessResponse, error)
}

type cloudEndpointsEventAPIExampleServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCloudEndpointsEventAPIExampleServiceClient(cc grpc.ClientConnInterface) CloudEndpointsEventAPIExampleServiceClient {
	return &cloudEndpointsEventAPIExampleServiceClient{cc}
}

func (c *cloudEndpointsEventAPIExampleServiceClient) GetServiceNameEventEventTypeEventId(ctx context.Context, in *GetServiceNameEventEventTypeEventIdRequest, opts ...grpc.CallOption) (*Event, error) {
	out := new(Event)
	err := c.cc.Invoke(ctx, "/cloudendpointseventapiexample.CloudEndpointsEventAPIExampleService/GetServiceNameEventEventTypeEventId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudEndpointsEventAPIExampleServiceClient) PostServiceNameEventEventType(ctx context.Context, in *PostServiceNameEventEventTypeRequest, opts ...grpc.CallOption) (*EventSuccessResponse, error) {
	out := new(EventSuccessResponse)
	err := c.cc.Invoke(ctx, "/cloudendpointseventapiexample.CloudEndpointsEventAPIExampleService/PostServiceNameEventEventType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CloudEndpointsEventAPIExampleServiceServer is the server API for CloudEndpointsEventAPIExampleService service.
// All implementations must embed UnimplementedCloudEndpointsEventAPIExampleServiceServer
// for forward compatibility
type CloudEndpointsEventAPIExampleServiceServer interface {
	// Event API
	//
	// Event API
	GetServiceNameEventEventTypeEventId(context.Context, *GetServiceNameEventEventTypeEventIdRequest) (*Event, error)
	// Event API
	//
	// Event API for Saving Events
	PostServiceNameEventEventType(context.Context, *PostServiceNameEventEventTypeRequest) (*EventSuccessResponse, error)
	mustEmbedUnimplementedCloudEndpointsEventAPIExampleServiceServer()
}

// UnimplementedCloudEndpointsEventAPIExampleServiceServer must be embedded to have forward compatible implementations.
type UnimplementedCloudEndpointsEventAPIExampleServiceServer struct {
}

func (UnimplementedCloudEndpointsEventAPIExampleServiceServer) GetServiceNameEventEventTypeEventId(context.Context, *GetServiceNameEventEventTypeEventIdRequest) (*Event, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceNameEventEventTypeEventId not implemented")
}
func (UnimplementedCloudEndpointsEventAPIExampleServiceServer) PostServiceNameEventEventType(context.Context, *PostServiceNameEventEventTypeRequest) (*EventSuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostServiceNameEventEventType not implemented")
}
func (UnimplementedCloudEndpointsEventAPIExampleServiceServer) mustEmbedUnimplementedCloudEndpointsEventAPIExampleServiceServer() {
}

// UnsafeCloudEndpointsEventAPIExampleServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CloudEndpointsEventAPIExampleServiceServer will
// result in compilation errors.
type UnsafeCloudEndpointsEventAPIExampleServiceServer interface {
	mustEmbedUnimplementedCloudEndpointsEventAPIExampleServiceServer()
}

func RegisterCloudEndpointsEventAPIExampleServiceServer(s grpc.ServiceRegistrar, srv CloudEndpointsEventAPIExampleServiceServer) {
	s.RegisterService(&CloudEndpointsEventAPIExampleService_ServiceDesc, srv)
}

func _CloudEndpointsEventAPIExampleService_GetServiceNameEventEventTypeEventId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServiceNameEventEventTypeEventIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudEndpointsEventAPIExampleServiceServer).GetServiceNameEventEventTypeEventId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloudendpointseventapiexample.CloudEndpointsEventAPIExampleService/GetServiceNameEventEventTypeEventId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudEndpointsEventAPIExampleServiceServer).GetServiceNameEventEventTypeEventId(ctx, req.(*GetServiceNameEventEventTypeEventIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudEndpointsEventAPIExampleService_PostServiceNameEventEventType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostServiceNameEventEventTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudEndpointsEventAPIExampleServiceServer).PostServiceNameEventEventType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloudendpointseventapiexample.CloudEndpointsEventAPIExampleService/PostServiceNameEventEventType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudEndpointsEventAPIExampleServiceServer).PostServiceNameEventEventType(ctx, req.(*PostServiceNameEventEventTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// CloudEndpointsEventAPIExampleService_ServiceDesc is the grpc.ServiceDesc for CloudEndpointsEventAPIExampleService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CloudEndpointsEventAPIExampleService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "cloudendpointseventapiexample.CloudEndpointsEventAPIExampleService",
	HandlerType: (*CloudEndpointsEventAPIExampleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetServiceNameEventEventTypeEventId",
			Handler:    _CloudEndpointsEventAPIExampleService_GetServiceNameEventEventTypeEventId_Handler,
		},
		{
			MethodName: "PostServiceNameEventEventType",
			Handler:    _CloudEndpointsEventAPIExampleService_PostServiceNameEventEventType_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/event/event-annotated.proto",
}
